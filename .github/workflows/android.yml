name: Build APK

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install system deps
      run: |
        sudo apt update
        sudo apt install -y zip unzip openjdk-17-jdk python3-pip

    - name: Install Buildozer & Cython
      run: |
        pip install --upgrade pip
        pip install buildozer cython

    - name: Setup Android SDK Command Tools
      run: |
        mkdir -p "$HOME/android-sdk/cmdline-tools"
        cd "$HOME/android-sdk/cmdline-tools"
        curl -sSLO https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
        unzip -q commandlinetools-linux-10406996_latest.zip
        mv cmdline-tools latest
      shell: bash

    - name: Configure SDK paths
      run: |
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "$HOME/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$HOME/android-sdk/platform-tools" >> $GITHUB_PATH

    - name: Accept licenses & install required SDK components
      run: |
        sdkmanager --sdk_root=$HOME/android-sdk --licenses <<< "y\n"
        sdkmanager --sdk_root=$HOME/android-sdk \
          "platform-tools" \
          "platforms;android-31" \
          "build-tools;31.0.0"
      shell: bash

    - name: Build APK via Buildozer
      run: |
        buildozer android debug
      env:
        ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        ANDROID_HOME: ${{ env.ANDROID_HOME }}

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: fitapp-apk
        path: bin/*.apk
